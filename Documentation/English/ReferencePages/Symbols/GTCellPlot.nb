(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    126449,       2497]
NotebookOptionsPosition[    118727,       2346]
NotebookOutlinePosition[    121140,       2405]
CellTagsIndexPosition[    121053,       2400]
WindowTitle->GTCellPlot
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["GROUP THEORY SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "061c7c3a-e1f4-487c-919d-77aecbae623a"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "6f274a23-ce16-46f0-a943-8a9236d674d5"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "ee2c627d-e542-4c02-8587-715614f4de74"]
         }],ExpressionUUID->"45a75e9a-e777-4cdc-8f1a-3868ffa4c72b"],
         StripOnInput->False], {"\<\"GTLatticeVectors\"\>":>
        Documentation`HelpLookup[
        "paclet:GroupTheory/ref/GTLatticeVectors"], \
"\<\"GTBravaisLattice\"\>":>Documentation`HelpLookup[
        "paclet:GroupTheory/ref/GTBravaisLattice"], "\<\"GTPlotCluster\"\>":>
        Documentation`HelpLookup[
        "paclet:GroupTheory/ref/GTPlotCluster"], "\<\"GTAtomsInCell\"\>":>
        Documentation`HelpLookup["paclet:GroupTheory/ref/GTAtomsInCell"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "33fb1ce8-7a27-45d7-9148-10a877829ce1"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "0f53328a-873d-4423-9efd-2beb1ce06831"]
         }],ExpressionUUID->"7d368719-d253-42f3-a368-0a71862ac3b3"],
         StripOnInput->False], {"\<\"GroupTheory/ref/GTCellPlot\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["GroupTheory/ref/GTCellPlot"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/GroupTheory/ref/\
GTCellPlot.html"], StandardForm]], "Input", TextClipboardType -> 
               "PlainText"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$93510], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "GroupTheory/ref/GTCellPlot" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a2c59d40-def6-4a01-90ff-7f145f62e577"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "304106fd-0589-45b6-8781-df39045219f7"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"2fe7b48f-df39-451d-b498-ba5d8774408a"],

Cell["GroupTheory`", "ContextNameCell",ExpressionUUID->"bab588d3-d098-4a09-84d5-29015c39f0ef"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "GTCellPlot", "ObjectName",ExpressionUUID->
      "0330a784-421a-484f-a82a-c382b78174d6"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"2e99300a-a481-4553-b600-31ebdc24f093"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "1cf5b8f4-4c38-401b-97f8-abba5efbdecc"]
    }],ExpressionUUID->"6ba4b49d-2a4a-4bb7-955b-2e52006aa04d"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"26e32d52-3088-459d-a0cb-\
75d14f92cf80"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["GTCellPlot"]], "paclet:GroupTheory/ref/GTCellPlot", 
         "GroupTheory Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{"basis", ",", " ", "atoms", ",", " ", "plotdata"}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "f7aba3a7-d1a9-420d-a5e8-4ed8819b82d8"],
     "\[LineSeparator]can be used to plot unit cells as a primitive cell or \
as a conventional cell. ",
     StyleBox["basis ", "TI"],
     "contains the corresponding lattice vectors. For a conventional cell ",
     StyleBox["atoms", "TI"],
     " contains the positions of the atoms in the cell. plotdata is used to \
customize the plot."
    }],ExpressionUUID->"5e544247-896c-4618-9431-c3203159f191"]}
  }]], "Usage",
 CellID->982511436,ExpressionUUID->"5e93776c-b125-45e3-bd20-98c5badee441"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"e05c7a64-f6d8-4de8-b5d6-d386f2872df5"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"371ed4f9-d7d8-4380-9917-3006b1c9390b"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"b4157063-d5a7-41a6-b662-fd933636b13d"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"a02f557c-1002-4bef-95d5-86bfeae28683"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->638742749,ExpressionUUID->"1342f9c9-5bf5-41a8-9878-c77b9a994ecc"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GTCellPlot"]], "paclet:GroupTheory/ref/GTCellPlot", 
    "GroupTheory Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5f7bcf88-1693-467a-8d43-0e50666f8cd8"],
 " is mainly used in ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GTBravaisLattice"]], "paclet:GroupTheory/ref/GTBravaisLattice",
     "GroupTheory Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8b9f3529-f273-4b0d-a82f-b0d6b6a517f8"],
 ", but can be used also separately."
}], "Notes",
 CellID->1067943069,ExpressionUUID->"f39cb6bf-b510-47a0-a710-cf0248092f3d"],

Cell["The following options can be given:", "Notes",
 CellID->1889788362,ExpressionUUID->"547f9c2a-6b8f-4298-91d6-67be8f776823"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b1a2e27d-2716-49a3-99e1-71b964fd5e4e"], 
    TemplateBox[{
      Cell[
       TextData["FontSize"]], "paclet:ref/FontSize"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], "14", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Size"]], "paclet:ref/Size"},
       "RefLink",
       BaseStyle->{"3ColumnTableMod"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fbfdb94d-08ae-4080-8587-7e757316353e"],
     " ",
     "of",
     " ",
     "the",
     " ",
     "labels."
    }], "TableText",ExpressionUUID->"a4d79636-2a1a-438e-b6f4-fc7d33be8f4b"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "8b83b7b0-c04b-4220-ae8a-0efb5797501c"], 
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["GOCoordinateSystem"]], "paclet:ref/GOCoordinateSystem"},
      "RefLink",
      BaseStyle->{"3ColumnTableMod"}], " ", 
     TemplateBox[{1295379749},
      "ExampleJumpLink"]}], 
    TemplateBox[{
      Cell[
       TextData["True"]], "paclet:ref/True"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Plot"]], "paclet:ref/Plot"},
       "RefLink",
       BaseStyle->{"3ColumnTableMod"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e76145c2-c0bb-4013-ad0b-f26319359368"],
     " ",
     "of",
     " ",
     "coordinate",
     " ",
     "system",
     " ",
     "or",
     " ",
     "not."
    }], "TableText",ExpressionUUID->"ba1d2542-9d76-4ee3-85a2-dd28a389cd22"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->814096202,ExpressionUUID->"4da8299c-a80e-40f3-ad95-b4c1c9023a17"],

Cell[TextData[StyleBox["This command is new and not explained in the book.",
 FontColor->RGBColor[1, 0, 0]]], "Notes",
 CellID->896551977,ExpressionUUID->"157ffc3e-1cb7-4525-8f62-6d3ac9cce48f"],

Cell[TextData[{
 "See: W. Hergert, M. Geilhufe, ",
 StyleBox["Group Theory in Solid State Physics and Photonics. Problem Solving \
with Mathematica",
  FontSlant->"Italic"]
}], "Notes",
 CellID->455922372,ExpressionUUID->"d125be1b-ab9e-4bc1-a8e8-305b0662b709"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"a310fac7-286a-41ae-a4d4-99b5d60ea0a6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"69946589-7ee8-4afc-a054-2b761480ec06"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "b870324f-1f15-456e-b2ad-9d3579f1bd64"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1762617795,ExpressionUUID->"9f90e316-590b-4b96-b788-98215190557c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"f88337f7-9565-4a8b-bcbe-1d3b518ac24a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"6289126b-954d-4d76-a3fb-b54170c3ce18"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "45300e81-8e3b-4381-af7c-63c5a70f53c6"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->511938463,ExpressionUUID->"2e5fec16-f582-477a-887b-f085a69ffa70"],

Cell["First load the package:", "ExampleText",
 CellID->407422835,ExpressionUUID->"8933fd32-ff04-4e80-855c-da53f407d8af"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<GroupTheory`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->82442486,ExpressionUUID->"47c719ef-78e7-4514-8bcd-d6a40dfd2349"],

Cell["The lattice constant is:", "ExampleText",
 CellID->1946737537,ExpressionUUID->"1a9f8f10-4015-49c7-b309-a33b5f7cdbc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1983942075,ExpressionUUID->"44f1a175-8b71-4b35-8d5e-b35bef6ef0df"],

Cell["\<\
We define data corresponding to a cubic lattice. The lattice vectors are:\
\>", "ExampleText",
 CellID->344775778,ExpressionUUID->"c0b89c2c-47a0-40e9-b2e2-fcb413e1b480"],

Cell[BoxData[
 RowBox[{
  RowBox[{"latt", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "a"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1511190477,ExpressionUUID->"c99a5f04-a8c1-4700-bb9c-7f226ba94525"],

Cell["\<\
The positions for the atoms in an fcc structure are given by:\
\>", "ExampleText",
 CellID->296094016,ExpressionUUID->"f936f12f-5fb8-4000-8c61-e5890c0f0284"],

Cell[BoxData[
 RowBox[{
  RowBox[{"atoms", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["a", "2"], ",", 
       FractionBox["a", "2"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["a", "2"], ",", "0", ",", 
       FractionBox["a", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["a", "2"], ",", 
       FractionBox["a", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["a", "2"], ",", 
       FractionBox["a", "2"], ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", 
       FractionBox["a", "2"], ",", 
       FractionBox["a", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["a", "2"], ",", "a", ",", 
       FractionBox["a", "2"]}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->2104453267,ExpressionUUID->"75d21751-8d27-4689-afbe-6881eecc1c79"],

Cell["\<\
The plotdata {scale,size} contain a scaling factor scale for the coordinate \
axis and the size of the atoms.\
\>", "ExampleText",
 InitializationCell->True,
 CellID->262043612,ExpressionUUID->"8469d8b4-d362-4588-8775-ba6a0b1b822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GTCellPlot", "[", 
  RowBox[{"latt", ",", "atoms", ",", 
   RowBox[{"{", 
    RowBox[{"1.4", ",", ".08"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1065381097,ExpressionUUID->"7f2f4228-19c9-435e-884f-96b97d4e8868"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.4, 0., 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"x\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {1.47, 0., 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.4, 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"y\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {0., 1.47, 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.4}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"z\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {0., 0., 1.47}]}}}, 
   {GrayLevel[0.85], Opacity[0.1], 
    InterpretationBox[
     HexahedronBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 0, 1}, {1,
       0, 1}, {1, 1, 1}, {0, 1, 1}}],
     Parallelepiped[{0, 0, 0}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}]]}, {
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{Rational[1, 2], 0, 0}, {0.5, 0, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{0, Rational[1, 2], 0}, {0, 0.5, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(3\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{0, 0, Rational[1, 2]}, {0, 0, 0.5}]]}}}, {
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 1}, 0.08]}}, {
    SphereBox[NCache[{Rational[1, 2], Rational[1, 2], 0}, {0.5, 0.5, 0}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], 0, Rational[1, 2]}, {0.5, 0, 0.5}], 0.08], 
    SphereBox[NCache[{0, Rational[1, 2], Rational[1, 2]}, {0, 0.5, 0.5}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], Rational[1, 2], 1}, {0.5, 0.5, 1}], 0.08], 
    SphereBox[NCache[{1, Rational[1, 2], Rational[1, 2]}, {1, 0.5, 0.5}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], 1, Rational[1, 2]}, {0.5, 1, 0.5}], 0.08]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0, 0},
  Ticks->None]], "Output",
 CellLabel->"Out[5]=",
 CellID->186917363,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
r7XL+ZVXSls2bizaijfq1/+xxn/+Y2JHvPb/A0oTByoozdCql462QpW3q7fu
qK6uU0DZmbXVRgpDd+tkpLiEabQl5i2pLWOoXcraqPpdLtWuVUveWsFv3WtX
t26f0ZHDZfuDdFA01kGh5hxndT7dIgy0GlOKcXXUVW1hpqKw0FgY3hMoqLEx
HkHmuBYRMr6uP8pqeqoaS1fn3a2yOrZoJvgx2tSxlmrI/8vIhAbldwzTQfa2
TvSoPYBmtNFbR3QqMmU4Ya7D9Jaa1JkvO1V57dBf6krlJWGyYxdMsFDeLiqv
rPYweS4x3C5cnkscpWN2Ex2zu+mYbdFZmGU1THm7Mgystr5SCLE1y0qSijWy
EqtjcyirwgZRcjVIWbGo8IzXMfYdncBWjdWMbfroqEcZ1KjrO9UWSy+rx0vq
ZlbPdA+lVkjziLVQj4d5KjCxeos1elct1gxE+uioQmNxzQq1TtCuO/9TCImO
frpCqKxZWxaCmLpJ0bHUScdS08SXZaHdV0cIynZgdQGxpimQX8Rb3g6gSgCN
pVEYaT24WgEMowDKHDzTdYxsqqNWizGc2ch+OgIYamlkLVOPJj5iMlSdHlHY
95TeldlvZ50isy8m9QT74zyCzeyPJfs3HBzlSb1MHXOb6Zirjrs1xX0/HfY1
5lpbXrxkMll8vN9LKmhNzSoq8NeoYAGHW0IF22q2pwqGyyrI0bG4uU6EqdNc
wlvmC/rcdFQQaGlxbU2BL1XdvkkG3VuVBMNSI4mJLoNkSYhVISGJkgbDZUnY
280UEx751Vus0a3FxJy5su2vI4kAS4tlmZuXQdV9+4KKkybgPV6Sh+haulob
qpGHH+UxSJXHKKlQx/QWOqZ3qt50jTxU01tXmWnOgDW1psunUSZ664htJ2Lr
XJnUpEOZ5NSZrQtbt4qB/sMWOHVzb/ySnBylkH+RUzC+ZoGmDAALpWIdhO/q
BIA8Dy8X7+46IvLX4NJMt9bSwaXsh39VwdWopcXesa6QmvaE1LyPsnWu5QCE
RcXCsbsPf+8vtlaVSS16v6nq0DI1RVr7VKvDcLsYocNSHagtdaCq84OWN0Mz
TcFqdOinAa25UE+dY6lQK2oLgl+LtnxNEjHp4FQhOTZX9hOZN9Cpewdbc4D7
nhekDkMgdfRD9Kg42PUIEuVnJ38R8B35+nseFVKrfpJyQzJbVeetMFBypc7j
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
QctqpnNav4R/Qv0OWhbHN2euMX+cWDgTvlMDi0UzRkozDeDlf48qbkExWon6
fmX75HP0eqg9G7kEVE5LHd9vMDL62WPyQGfMtffAUg9/rAlSYnNMAnakjcK+
8dOQM3MBTi9egXOrN+HSll24uisH1w+exM1j53BbfRVF527jzpUHuHv9Ke7e
fok7d9+i6MF73Hr4Gdcf/YPCR6W49PAfFDz4B6fufkLuzXfYfYki3Yk7mLXl
RFW0JAJAq6hztNjfX/lAXUlupKgkJ+g0N6tFEvxfryf8NR20Cf1ety2fesSS
C1rVUH+SRm8wSpqJF9ez0otPwr3PPvppZTd05+n1VPs0cvOvnAziLPpjnDWZ
3CBnLHL2xCq/AGwOC8OOpCTsHzUah6fOwHHVQpxdvgpXN27GjR27cfvAYdw9
egr3T59H8flreHSlCI9vPsTjO8/w+MErPHr0Dg+ffsSD519w70Upil78ixvP
/8WVZ6U49+gLTt57j5zrL7H97H0s3HmqKjIS/yXk765VldvTpEqT5NmQkpHc
mRDI1ND2bfrlcDTuEC0bt0Swkw/+5Aax73l1LsJhUJjp8N9pwalw0UmvbJPV
2VSu2Q1XT23UyE8HHKG2ZKuyFb9ky/5kOvaYZ+eMZW5e2DA0ANlRYdiXloTc
8WNwYuYMqBctItNZjdtZW3B33x4UH8nF41On8fTcBTy/cg0vbt5Byd2HKCl+
jpKnr1Hy4m+8ePUJz15/wZO3pSh++y/uvQFuvSrF1RdfUPDoPfKKXmLPxftY
trcKSPxcVqiDIHFxGvGg7eLEfVFJ8lUjCR3JqqJAp6Y+V+7JGBL+5wRZX6us
OjcrlcyucLasPoefX9Gkl6sutR9eOpjzz2RfXWdi6QCT9QfDrnWwcKCE8Axp
lOKrA49QUbaNrgVZVYaNE6bb2GGRgwvWeHthW3Ag9sSFImdEEo5PHo38eTNw
PnMRLq9fjbs7tuDRod14djwXJWdP49WlC3hz4xre3rmDdw8f4t3T53hX8hrv
Xv+Nt+8+4fX7L3j54V88p/b4/b+4/64Ut15/xuXn76G+X4KDV+5i5b68KsxJ
cqJDSJheS1NLW6ej08qFUpZuQArspbbYE0MYc2pFnFTYabR6Jv+MiQuOPwnC
1y0W9Lk3syXNKR8mzpmdaZ6xVeDeAruvbjGxC59J+jZY0dyYv0Id1ChePbtR
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
k+aY2wsUP76Dm0XXcKnwPE7k56l2ZW9sXE5Knh4ZxpZ0CpXBwcUh/9fZdYBX
VTTtIyIgxYaaDwUJCIr0Lt1LhxAghEAS0sMlvZHeuYA06UWjKEURERDpgiAE
BWmRXgRp0pQeitLD/O+e3VM2OQnx53kOuTn3Zu+Zd2Zn392d2YG2ggL9L7Zv
34F1sHcs1sSEy2MTY11T3PHJARWypqQkHq6p19G3oKm6rLJCI/StFrwoRhdM
hXpiQtzXDcPgIHhF8OAhrCCGXRTEwHAYir4RjjEuKpG8Q8GLY+D9hkMZ8Wox
jLJqGYzneRmM4ZlMgfgoulZ4Ei+FwcrXeA+lSgP+q57ezFnk40rrgvvR9gQv
OjgqiE5MjaLzX6TTlcXjKX/Nx/TP5vl0f8dSerR/LRX8vpkKTm+nggt7qODK
ISrIP04Fd05Twd1zVHAfunpwSQ1te4Tr+tXTdOHCMTp9+hAdPrqbtv26XsTg
VGJKGp4eFaFuY4VCQVAUW29limPvsU/ph19Zacy0LKmz0VDD7eVb9y2mrULk
FRqrBY29C401gcZat+J1MLp3Q7+CxtygsUEYz7x9eA2MIDs7mx3agjeMiFXP
1K8SE69qTInX6l+ws9yzy6rlL6CxpGzczuKVTeLSeK0aVv5iaJRafKic2+Di
NVaGbbrXFps+K3x60q9xHnRwpB+dmhJKF79IpGvfjqLba6bSvdzP6eHOb+jx
/hVUcOxHKjjzMxVc3EkFV/dBR4ehoz+gIxY29Sf0cx7XBbp19Q+6evEwXTy3
n06d2E0H9m3O2bT6q6rF9yNt99jzw/goq5OarArYiW1Zaa4pNCXFMVWVNCVR
Tl1TtaGp96CpZtBUW2jK1hH9CprqC025Q1Oeg3nBi0BW8ALjViimixFR/Oj2
2HiqFjOcBobhXhLUkKwXu4AjTBvBCEiaqdZFchZXJlNqLDQWCY0x0uI3lDlb
TWNF94dMGqtmXxriQZvD+tL+LC86OTGILn4WTde/yaA7qybQ/U0f0+Md86lg
3xL0qtXQ2EZobCt61S5oDFq7c1iNmCq4/wc9uHOcbl89RDcu7qMr53+j86d2
0B+HN+ft2rJUbAlWeFqPqmihrreLV5c0Kww1VKjPEGR1SWTRUFdtXkyhBdTV
rgUvdNEb6uoPdQ2CuryhLn8fUeQC6gqHaqKAcSzUNTyeGsXEkI39npLGC1yk
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
w1lNGOwz/wfT/JuZ\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"b02524d2-5c79-4987-b2f9-1912ad13e4c7"]
}, Open  ]],

Cell["For a better representation we will change the plotdata.", "ExampleText",
 CellID->350314836,ExpressionUUID->"9f3a39d0-1603-45ce-8309-624213474673"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GTCellPlot", "[", 
  RowBox[{"latt", ",", "atoms", ",", 
   RowBox[{"{", 
    RowBox[{"1.4", ",", ".1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1457397439,ExpressionUUID->"d50e9790-3a5a-437f-9984-58025a3b531a"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.4, 0., 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"x\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {1.47, 0., 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.4, 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"y\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {0., 1.47, 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.4}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"z\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], {0., 0., 1.47}]}}}, 
   {GrayLevel[0.85], Opacity[0.1], 
    InterpretationBox[
     HexahedronBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 0, 1}, {1,
       0, 1}, {1, 1, 1}, {0, 1, 1}}],
     Parallelepiped[{0, 0, 0}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}]]}, {
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{Rational[1, 2], 0, 0}, {0.5, 0, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{0, Rational[1, 2], 0}, {0, 0.5, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(3\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->14], StandardForm], 
       NCache[{0, 0, Rational[1, 2]}, {0, 0, 0.5}]]}}}, {
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 1}, 0.1]}}, {
    SphereBox[NCache[{Rational[1, 2], Rational[1, 2], 0}, {0.5, 0.5, 0}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], 0, Rational[1, 2]}, {0.5, 0, 0.5}], 0.1], 
    SphereBox[NCache[{0, Rational[1, 2], Rational[1, 2]}, {0, 0.5, 0.5}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], Rational[1, 2], 1}, {0.5, 0.5, 1}], 0.1], 
    SphereBox[NCache[{1, Rational[1, 2], Rational[1, 2]}, {1, 0.5, 0.5}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], 1, Rational[1, 2]}, {0.5, 1, 0.5}], 0.1]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0, 0},
  ImageSize->{372.6766357421875, Automatic},
  Ticks->None,
  ViewPoint->{2.147588085585813, -2.270009184477988, 1.2980461151420795`},
  ViewVertical->{0.2269272289636891, -0.11323540157815601`, 
   0.9673064543278388}]], "Output",
 CellLabel->"Out[6]=",
 CellID->630202661,ExpressionUUID->"dd0acd5b-3f7d-49f7-8ec7-43f4895782dc"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"aea7d4be-be6a-4ef3-a253-4082b48643f2"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"7fe0ab85-b92e-4de7-b9f8-5bd35cd93de3"],
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "2602414c-d074-4171-a846-9832c991b3d2"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->2061341341,ExpressionUUID->"4ae72a07-1614-4555-a0e1-9910dcec01a8"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"b3c2a7f9-c82a-45f2-b931-716fe5bf198e"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"2125cc12-12e1-4154-ac90-ba69cfa946dc"],
 "Fontsize",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "7703b500-b969-420f-b4b7-85fda3c7ddb1"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1757724783,ExpressionUUID->"3bc4372e-da5e-44b2-96b4-e21d56929e1c"],

Cell["This option controls the font size of the labels", "ExampleText",
 CellID->1641062065,ExpressionUUID->"3cecdfd0-be1f-46ee-9986-55960c6b3ccd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GTCellPlot", "[", 
  RowBox[{"latt", ",", "atoms", ",", 
   RowBox[{"{", 
    RowBox[{"1.4", ",", ".1"}], "}"}], ",", 
   RowBox[{"FontSize", "\[Rule]", "25"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->162855134,ExpressionUUID->"b454b89d-be7f-43fc-bfb7-b57046493144"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1.4, 0., 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"x\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], {1.47, 0., 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1.4, 0.}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"y\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], {0., 1.47, 0.}]}}, 
    {RGBColor[0, 0, 1], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.4}}}, 0.01]], 
     {RGBColor[0, 0, 1], Text3DBox[
       FormBox[
        StyleBox["\<\"z\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], {0., 0., 1.47}]}}}, 
   {GrayLevel[0.85], Opacity[0.1], 
    InterpretationBox[
     HexahedronBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 0, 1}, {1,
       0, 1}, {1, 1, 1}, {0, 1, 1}}],
     Parallelepiped[{0, 0, 0}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}]]}, {
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{Rational[1, 2], 0, 0}, {0.5, 0, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{0, Rational[1, 2], 0}, {0, 0.5, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(3\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{0, 0, Rational[1, 2]}, {0, 0, 0.5}]]}}}, {
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 0}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 1}, 0.1]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 1}, 0.1]}}, {
    SphereBox[NCache[{Rational[1, 2], Rational[1, 2], 0}, {0.5, 0.5, 0}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], 0, Rational[1, 2]}, {0.5, 0, 0.5}], 0.1], 
    SphereBox[NCache[{0, Rational[1, 2], Rational[1, 2]}, {0, 0.5, 0.5}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], Rational[1, 2], 1}, {0.5, 0.5, 1}], 0.1], 
    SphereBox[NCache[{1, Rational[1, 2], Rational[1, 2]}, {1, 0.5, 0.5}], 
     0.1], SphereBox[
     NCache[{Rational[1, 2], 1, Rational[1, 2]}, {0.5, 1, 0.5}], 0.1]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0, 0},
  ImageSize->{531., Automatic},
  Ticks->None,
  ViewPoint->{1.3003128722012385`, -2.400003814454554, 1.999792020433964},
  ViewVertical->{6.850679972684247*^-6, -0.00008294922877661839, 
   0.9999999965362468}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1531311105,ExpressionUUID->"887bc704-d036-41ea-b820-f6da7008e68f"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"1432d828-c25c-473e-b044-eb0cfac63833"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"b72fe99e-31b2-48dc-9cd1-5433d9c15ac5"],
 "GOCoordinateSystem",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "bc9dfa2b-2148-4403-9b31-2c649298f346"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1295379749,ExpressionUUID->"dcd295d8-3ee0-4304-9103-6e758efb1fee"],

Cell["A coordinate system can be switched of.", "ExampleText",
 CellID->36843646,ExpressionUUID->"2d967b76-c7e6-4e05-ab7f-65ec5e12330f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"go", "=", 
  RowBox[{"GTCellPlot", "[", 
   RowBox[{"latt", ",", "atoms", ",", 
    RowBox[{"{", 
     RowBox[{"1.4", ",", ".08"}], "}"}], ",", 
    RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
    RowBox[{"GOCoordinateSystem", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1185394562,ExpressionUUID->"bc57507e-77d2-4b6f-a78f-1dae55e680b0"],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.85], Opacity[0.1], 
    InterpretationBox[
     HexahedronBox[{{0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {0, 1, 0}, {0, 0, 1}, {1,
       0, 1}, {1, 1, 1}, {0, 1, 1}}],
     Parallelepiped[{0, 0, 0}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}]]}, {
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(1\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{Rational[1, 2], 0, 0}, {0.5, 0, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{0, Rational[1, 2], 0}, {0, 0.5, 0}]]}}, 
    {RGBColor[1, 0, 0], Arrowheads[0.05], 
     Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}, 0.01]], 
     {GrayLevel[0], Text3DBox[
       FormBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(3\\)]\\)\"\>",
         StripOnInput->False,
         FontSize->25], StandardForm], 
       NCache[{0, 0, Rational[1, 2]}, {0, 0, 0.5}]]}}}, {
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 0, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 0}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 0, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{0, 1, 1}, 0.08]}, 
    {RGBColor[0., 0.5, 0.5], SphereBox[{1, 1, 1}, 0.08]}}, {
    SphereBox[NCache[{Rational[1, 2], Rational[1, 2], 0}, {0.5, 0.5, 0}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], 0, Rational[1, 2]}, {0.5, 0, 0.5}], 0.08], 
    SphereBox[NCache[{0, Rational[1, 2], Rational[1, 2]}, {0, 0.5, 0.5}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], Rational[1, 2], 1}, {0.5, 0.5, 1}], 0.08], 
    SphereBox[NCache[{1, Rational[1, 2], Rational[1, 2]}, {1, 0.5, 0.5}], 
     0.08], SphereBox[
     NCache[{Rational[1, 2], 1, Rational[1, 2]}, {0.5, 1, 0.5}], 0.08]}},
  AspectRatio->1,
  Axes->True,
  ImageSize->{531.8276222439011, 529.},
  Ticks->None,
  ViewPoint->{1.9655925548344209`, -2.4408964443451193`, 1.276115377371048},
  ViewVertical->{0.165310470094622, -0.17922276880435167`, 
   0.9698204202939826}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1877668125,ExpressionUUID->"b1303105-d330-4935-b123-6da5a4dd8b30"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GTLatticeVectors"]], 
           "paclet:GroupTheory/ref/GTLatticeVectors", 
           "GroupTheory Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "2016a365-4c37-42db-8f69-9571fe1678dd"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GTBravaisLattice"]], 
           "paclet:GroupTheory/ref/GTBravaisLattice", 
           "GroupTheory Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "ed5e02f1-7308-4264-b7c6-12d22b03cfa8"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GTPlotCluster"]], 
           "paclet:GroupTheory/ref/GTPlotCluster", 
           "GroupTheory Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "7b2f1abd-11e8-4930-b14c-db8ca565e28d"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GTAtomsInCell"]], 
           "paclet:GroupTheory/ref/GTAtomsInCell", 
           "GroupTheory Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "1bf3c7d1-db5a-4322-9b5f-077c0dbc70e3"]
       }], "SeeAlso",ExpressionUUID->"cb9ce799-d703-4c85-a739-b2527907e292"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"8b744b31-bd88-4ce6-9103-\
76dea8cb085e"],

Cell[" ", "FooterCell",ExpressionUUID->"f863a407-a891-45fa-a26c-08d31cedc5eb"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900., 830.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"GTCellPlot",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed}, "NotesSection" -> 
    Closed, "ExampleSubsection" -> {"0" -> Closed, "1" -> Closed}}, 
  "NewStyles" -> True, "CitationPopupData" -> $Failed, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 4, 4, 9, 52, 46.099176}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "GroupTheory`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Group Theory Symbol", "language" -> "en", "paclet" -> "GroupTheory", 
    "status" -> "None", "summary" -> 
    "GTCellPlot[basis, atoms, plotdata] can be used to plot unit cells as a \
primitive cell or as a conventional cell. basis contains the corresponding \
lattice vectors. For a conventional cell atoms contains the positions of the \
atoms in the cell. plotdata is used to customize the plot.", "synonyms" -> {},
     "tabletags" -> {}, "title" -> "GTCellPlot", "titlemodifier" -> "", 
    "metadescription" -> "", "windowtitle" -> "GTCellPlot", "type" -> 
    "Symbol", "uri" -> "GroupTheory/ref/GTCellPlot"}},
CellContext->"Global`",
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Linux x86 (64-bit) (December 7, 2022)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"5a156e06-3909-4a2f-ac27-7487c79cfa1f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[12294, 336, 1421, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"9f90e316-590b-4b96-b788-98215190557c",
   CellTags->"PrimaryExamplesSection",
   CellID->1762617795]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 120852, 2393}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 4673, 109, 56, "AnchorBarGrid",ExpressionUUID->"2fe7b48f-df39-451d-b498-ba5d8774408a",
 CellID->1],
Cell[5258, 132, 94, 0, 24, "ContextNameCell",ExpressionUUID->"bab588d3-d098-4a09-84d5-29015c39f0ef"],
Cell[CellGroupData[{
Cell[5377, 136, 553, 14, 59, "ObjectNameGrid",ExpressionUUID->"26e32d52-3088-459d-a0cb-75d14f92cf80"],
Cell[5933, 152, 991, 23, 132, "Usage",ExpressionUUID->"5e93776c-b125-45e3-bd20-98c5badee441",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[6961, 180, 1919, 48, 37, "NotesSection",ExpressionUUID->"1342f9c9-5bf5-41a8-9878-c77b9a994ecc",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->638742749],
Cell[8883, 230, 786, 22, 70, "Notes",ExpressionUUID->"f39cb6bf-b510-47a0-a710-cf0248092f3d",
 CellID->1067943069],
Cell[9672, 254, 128, 1, 70, "Notes",ExpressionUUID->"547f9c2a-6b8f-4298-91d6-67be8f776823",
 CellID->1889788362],
Cell[9803, 257, 1905, 61, 70, "3ColumnTableMod",ExpressionUUID->"4da8299c-a80e-40f3-ad95-b4c1c9023a17",
 CellID->814096202],
Cell[11711, 320, 193, 2, 70, "Notes",ExpressionUUID->"157ffc3e-1cb7-4525-8f62-6d3ac9cce48f",
 CellID->896551977],
Cell[11907, 324, 260, 6, 70, "Notes",ExpressionUUID->"d125be1b-ab9e-4bc1-a8e8-305b0662b709",
 CellID->455922372]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[12294, 336, 1421, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"9f90e316-590b-4b96-b788-98215190557c",
 CellTags->"PrimaryExamplesSection",
 CellID->1762617795],
Cell[CellGroupData[{
Cell[13740, 377, 1398, 36, 30, "ExampleSection",ExpressionUUID->"2e5fec16-f582-477a-887b-f085a69ffa70",
 CellID->511938463],
Cell[15141, 415, 121, 1, 38, "ExampleText",ExpressionUUID->"8933fd32-ff04-4e80-855c-da53f407d8af",
 CellID->407422835],
Cell[15265, 418, 174, 3, 27, "Input",ExpressionUUID->"47c719ef-78e7-4514-8bcd-d6a40dfd2349",
 CellID->82442486],
Cell[15442, 423, 123, 1, 38, "ExampleText",ExpressionUUID->"1a9f8f10-4015-49c7-b309-a33b5f7cdbc2",
 CellID->1946737537],
Cell[15568, 426, 166, 4, 27, "Input",ExpressionUUID->"44f1a175-8b71-4b35-8d5e-b35bef6ef0df",
 CellID->1983942075],
Cell[15737, 432, 179, 3, 38, "ExampleText",ExpressionUUID->"c0b89c2c-47a0-40e9-b2e2-fcb413e1b480",
 CellID->344775778],
Cell[15919, 437, 417, 12, 27, "Input",ExpressionUUID->"c99a5f04-a8c1-4700-bb9c-7f226ba94525",
 CellID->1511190477],
Cell[16339, 451, 167, 3, 38, "ExampleText",ExpressionUUID->"f936f12f-5fb8-4000-8c61-e5890c0f0284",
 CellID->296094016],
Cell[16509, 456, 949, 30, 40, "Input",ExpressionUUID->"75d21751-8d27-4689-afbe-6881eecc1c79",
 CellID->2104453267],
Cell[17461, 488, 242, 5, 38, "ExampleText",ExpressionUUID->"8469d8b4-d362-4588-8775-ba6a0b1b822b",
 InitializationCell->True,
 CellID->262043612],
Cell[CellGroupData[{
Cell[17728, 497, 255, 6, 27, "Input",ExpressionUUID->"7f2f4228-19c9-435e-884f-96b97d4e8868",
 CellID->1065381097],
Cell[17986, 505, 81956, 1364, 261, 3249, 72, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b02524d2-5c79-4987-b2f9-1912ad13e4c7",
 CellID->186917363]
}, Open  ]],
Cell[99957, 1872, 154, 1, 70, "ExampleText",ExpressionUUID->"9f3a39d0-1603-45ce-8309-624213474673",
 CellID->350314836],
Cell[CellGroupData[{
Cell[100136, 1877, 254, 6, 70, "Input",ExpressionUUID->"d50e9790-3a5a-437f-9984-58025a3b531a",
 CellID->1457397439],
Cell[100393, 1885, 3538, 78, 393, "Output",ExpressionUUID->"dd0acd5b-3f7d-49f7-8ec7-43f4895782dc",
 CellID->630202661]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[104080, 1971, 1415, 37, 70, "ExampleSection",ExpressionUUID->"4ae72a07-1614-4555-a0e1-9910dcec01a8",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[105520, 2012, 1425, 37, 70, "ExampleSubsection",ExpressionUUID->"3bc4372e-da5e-44b2-96b4-e21d56929e1c",
 CellID->1757724783],
Cell[106948, 2051, 147, 1, 70, "ExampleText",ExpressionUUID->"3cecdfd0-be1f-46ee-9986-55960c6b3ccd",
 CellID->1641062065],
Cell[CellGroupData[{
Cell[107120, 2056, 301, 7, 70, "Input",ExpressionUUID->"b454b89d-be7f-43fc-bfb7-b57046493144",
 CellID->162855134],
Cell[107424, 2065, 3531, 78, 552, "Output",ExpressionUUID->"887bc704-d036-41ea-b820-f6da7008e68f",
 CellID->1531311105]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[111107, 2151, 1435, 37, 70, "ExampleSubsection",ExpressionUUID->"dcd295d8-3ee0-4304-9103-6e758efb1fee",
 CellID->1295379749],
Cell[112545, 2190, 136, 1, 70, "ExampleText",ExpressionUUID->"2d967b76-c7e6-4e05-ab7f-65ec5e12330f",
 CellID->36843646],
Cell[CellGroupData[{
Cell[112706, 2195, 393, 9, 70, "Input",ExpressionUUID->"bc57507e-77d2-4b6f-a78f-1dae55e680b0",
 CellID->1185394562],
Cell[113102, 2206, 2682, 56, 550, "Output",ExpressionUUID->"b1303105-d330-4935-b123-6da5a4dd8b30",
 CellID->1877668125]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[116141, 2274, 2501, 68, 70, "SeeAlsoSection",ExpressionUUID->"8b744b31-bd88-4ce6-9103-76dea8cb085e"],
Cell[118645, 2344, 78, 0, 70, "FooterCell",ExpressionUUID->"f863a407-a891-45fa-a26c-08d31cedc5eb"]
}
]
*)

(* End of internal cache information *)

